package com.example.demo.controller;
import java.util.HashMap;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.exception.ResourceNotFoundException;
import com.example.demo.model.Medical;
import com.example.demo.repository.MedicalRepository;

@RestController
@RequestMapping("/api/v1")
public class MedicalController {
	@Autowired
	private MedicalRepository medicalRepository;
	
	// get all medicals
			@GetMapping("/medicals")
			public List<Medical> getAllMedical()
			{
				return medicalRepository.findAll();
			}
			
			// create Medical rest API
			@PostMapping ("/medical")
			public Medical createMedical(@RequestBody Medical medical)
			{
				return medicalRepository.save(medical);
			}
			// get medical byID Rest API	
			@PostMapping ("/medical/{id}")
			public ResponseEntity<Medical> getMedicalById(@PathVariable Long id)
			{
				Medical medical = medicalRepository.findById(id)
						.orElseThrow(() -> new ResourceNotFoundException("Medical does not exit with id: " + id));
			return ResponseEntity.ok(medical);
			}
			
			// update medical rest API
			@PutMapping("/medicals/{id}")
			public ResponseEntity <Medical> updateMedical(@PathVariable Long id, @RequestBody Medical medicalDetails)
			{
				Medical medical = medicalRepository.findById(id)
						.orElseThrow(() -> new ResourceNotFoundException("Medical does not exit with id: " + id));
				
				medical.setM_NAME(medicalDetails.getM_NAME());
				medical.setM_QTY(medicalDetails.getM_QTY());
				
				
				Medical updatedMedical = medicalRepository.save(medical);
			return ResponseEntity.ok(updatedMedical);
			}
			@DeleteMapping("/medicals/{id}")
			public ResponseEntity  <Map<String,Boolean>> deleteMedical(@PathVariable Long id)
			{
				Medical medical = medicalRepository.findById(id)
						.orElseThrow(() -> new ResourceNotFoundException("Medical does not exit with id: " + id));
				
				
				medicalRepository.delete(medical);
				Map<String,Boolean>response = new HashMap<>();
				
					return ResponseEntity.ok(response);
			}
			
}
			

